How did viewing a diff between two versions of a file help you see the bug that was introduced?

diff -u old.txt new.txt

How could having easy access to entire history of a file make you a more efficient programmer in the long term?

It would allow you to easily find in the code where you made a mistake since that last version.

git log // shows all the last changes

git diff commidId commitID

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google doc does?

Pro: More control and it is easier to find bugs with logical commits.
Con: If you forget to commit google docs would have done it for you.

git log --stat  // shows stats on what files have changed

Why do you think some version control systems, like Git allow saving multiple files in one commit, while others, like Google Docs, Treat each file separately?

So you can save a logical change between files instead of just saving all the files one at a time and trying to find when they are releated.

How can you use the commands git log and git diff to view the history of files?
git log shows the history of commits 
git diff to show the exact changes between commits

git checkout // restore a previous commit

How might using version control make you more confident to make changes that could break something?

You can easly revert back to a more stable version.

git config --global core.editor "subl -n -w"
git config --global push.default upstream
git config --global merge.conflictstyle diff3


git status // shows last changed files

